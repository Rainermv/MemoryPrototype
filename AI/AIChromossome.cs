//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.18444
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;

namespace AIMemory
{
	[System.Serializable]
	public class AIChromossome
	{
		public int SIZE = 4;
		
		public int 	 MemMax		{get; set;}
		public float MemChanceSelf 	{get; set;}
		public float MemChanceOther {get; set;}
		public float ForgetChance 	{get; set;}
		
		public AIChromossome(bool random){
			if (random) FillRandom ();
			else FillNaive ();
		}
		
		public void FillRandom(){
			
			RandMemMax();
			RandMemChanceSelf();
			RandMemChanceOther();
			RandForgetChance();
			
		}
		
		public void FillNaive(){
		
			MemMax = 0;
			MemChanceSelf = 0.0f;
			MemChanceOther = 0.0f;
			ForgetChance = 1f;
			
		}
		
		public void RandMemMax(){
			MemMax = Random.Range (1,11);
		}
		
		public void RandMemChanceSelf(){
			MemChanceSelf = Random.Range (0f,0.5f);
		}
		
		public void RandMemChanceOther(){
			MemChanceOther = Random.Range (0f,0.5f);
		}
		
		public void RandForgetChance(){
			ForgetChance = 	Random.Range (0f,0.1f);
		}
		
		public AIChromossome (AIChromossome father, AIChromossome mother, float ANOMALY_CHANCE){
		
			int cutting_point = Random.Range (0,SIZE);
			
			// MemMax --------------------------------
			if (Random.Range (0f,1f) < ANOMALY_CHANCE){
				RandMemMax();
			}
			else if (cutting_point > 0)
				MemMax = father.MemMax;
			else
				MemMax = mother.MemMax;
			
			// MemChanceSelf --------------------------
			if (Random.Range (0f,1f) < ANOMALY_CHANCE){
				RandMemChanceSelf();
			}
			else if (cutting_point > 1)
				MemChanceSelf = father.MemChanceSelf;
			else
				MemChanceSelf = mother.MemChanceSelf;
			
			// MemChanceOther --------------------------
			if (Random.Range (0f,1f) < ANOMALY_CHANCE){
				RandMemChanceOther();
			}
			else if (cutting_point > 2)
				MemChanceOther = father.MemChanceOther;
			else
				MemChanceOther = mother.MemChanceOther;
			
			// ForgetChance --------------------------
			if (Random.Range (0f,1f) < ANOMALY_CHANCE){
				RandForgetChance();
			}
			else if (cutting_point > 3)
				ForgetChance = father.ForgetChance;
			else
				ForgetChance = mother.ForgetChance;
			
		}
		
	}
}

